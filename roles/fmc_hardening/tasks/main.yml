---
# FMC Security Hardening Tasks
# Implements H-Cloud Security Hardening Benchmark requirements

- name: Set timestamp variable
  set_fact:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.time | replace(':', '-') }}"
  when: timestamp is not defined

- name: Initialize Hardening Process
  debug:
    msg:
      - "=== FMC SECURITY HARDENING PROCESS ==="
      - "FMC Host: {{ fmc_host }}"
      - "Hardening Enabled: {{ hardening_enabled }}"
      - "Apply Hardening: {{ apply_hardening }}"
      - "Validate Compliance: {{ validate_compliance }}"
      - "Timestamp: {{ timestamp }}"

- name: Get Domain Information
  cisco.fmcansible.fmc_configuration:
    operation: getAllDomain
  register: domain_response
  failed_when: false

- name: Debug Domain Response
  debug:
    var: domain_response
  when: debug_mode | default(false) | bool

- name: Set domain UUID from response
  set_fact:
    domain_uuid: "{{ domain_response.response['items'][0].uuid }}"
  when: 
    - domain_response.response is defined
    - domain_response.response['items'] is defined
    - domain_response.response['items'] | length > 0

- name: Validate Domain Access
  fail:
    msg: "Failed to obtain domain information from FMC"
  when: domain_uuid is not defined or domain_uuid == ""

# ===== SECURITY HARDENING IMPLEMENTATION =====
# Execute hardening tasks based on H-Cloud Security Benchmark

- name: "STEP 1: Hostname Configuration Validation (3.1.1)"
  include_tasks: validate_hostname.yml
  when: hardening_enabled | bool

- name: "STEP 2: Warning Banner Configuration (3.1.2)"
  include_tasks: configure_banner.yml
  when: hardening_enabled | bool

- name: "STEP 3: Management Access Control List (3.3)"
  include_tasks: configure_access_control.yml
  when: hardening_enabled | bool

- name: "STEP 4: Session Timeout Configuration"
  include_tasks: configure_session_timeout.yml
  when: hardening_enabled | bool

- name: "STEP 5: Password Policy Configuration"
  include_tasks: configure_password_policy.yml
  when: hardening_enabled | bool

- name: "STEP 6: Health Monitoring Configuration"
  include_tasks: configure_health_monitoring.yml
  when: hardening_enabled | bool

# ===== CONFIGURATION EXTRACTION FOR BASELINE =====
# Extract current configuration for documentation and compliance tracking

- name: Get System Information for Baseline
  cisco.fmcansible.fmc_configuration:
    operation: getAllServerVersion
  register: system_info
  when: extract_system_info | bool

- name: Get All Access Policies for Baseline
  cisco.fmcansible.fmc_configuration:
    operation: getAllAccessPolicy
    path_params:
      domainUUID: "{{ domain_uuid }}"
  register: access_policies
  when: extract_access_policies | bool

- name: Get Network Policies for Baseline
  cisco.fmcansible.fmc_configuration:
    operation: getAllPrefilterPolicy
    path_params:
      domainUUID: "{{ domain_uuid }}"
  register: network_policies
  failed_when: false
  when: extract_network_policies | bool

- name: Get Device Information for Baseline
  cisco.fmcansible.fmc_configuration:
    operation: getAllDevice
    path_params:
      domainUUID: "{{ domain_uuid }}"
  register: devices
  when: extract_devices | bool

- name: Get Network Objects for Baseline
  cisco.fmcansible.fmc_configuration:
    operation: getAllNetworkObject
    path_params:
      domainUUID: "{{ domain_uuid }}"
  register: network_objects
  when: extract_network_objects | bool

## TODO: getAllPortObject not found in FMC API documentation
# - name: Get Port Objects for Baseline
#   cisco.fmcansible.fmc_configuration:
#     operation: getAllPortObject
#     path_params:
#       domainUUID: "{{ domain_uuid }}"
#   register: port_objects
#   when: extract_port_objects | bool

- name: Compile Hardening Configuration Data
  set_fact:
    hardening_config:
      extraction_info:
        timestamp: "{{ timestamp }}"
        fmc_host: "{{ fmc_host }}"
        extracted_by: "{{ ansible_user | default('ansible') }}"
        hardening_applied: "{{ apply_hardening | bool }}"
        compliance_validated: "{{ validate_compliance | bool }}"
      system_info: "{{ system_info.response | default({}) }}"
      access_policies: "{{ access_policies.response | default({'items': [], 'paging': {'count': 0, 'limit': 0}}) }}"
      network_policies: "{{ network_policies.response | default({'items': [], 'paging': {'count': 0, 'limit': 0}}) if network_policies.response is defined else {'items': [], 'paging': {'count': 0, 'limit': 0}} }}"
      devices: "{{ devices.response | default({'items': [], 'paging': {'count': 0, 'limit': 0}}) }}"
      network_objects: "{{ network_objects.response | default({'items': [], 'paging': {'count': 0, 'limit': 0}}) }}"
      # port_objects: "{{ port_objects.response | default({'items': [], 'paging': {'count': 0, 'limit': 0}}) }}"

# ===== COMPLIANCE REPORTING =====
# Generate comprehensive compliance report

- name: "STEP 7: Generate Compliance Report"
  include_tasks: generate_compliance_report.yml
  when: 
    - hardening_enabled | bool
    - compliance_report_enabled | bool

- name: Save Hardening Configuration Baseline to JSON
  copy:
    content: "{{ hardening_config | to_nice_json }}"
    dest: "{{ config_output_dir }}/fmc_hardening_baseline_{{ timestamp }}.json"
    mode: '0644'
  delegate_to: localhost

- name: Log Hardening Process Summary
  lineinfile:
    path: "{{ log_output_dir }}/hardening_process.log"
    line: "{{ timestamp }} - FMC {{ fmc_host }} - Hardening: {{ 'APPLIED' if apply_hardening else 'VALIDATED' }} - Compliance: {{ compliance_summary.compliance_percentage | default(0) }}% - Status: {{ compliance_summary.overall_status | default('UNKNOWN') }}"
    create: yes
    mode: '0644'
  delegate_to: localhost

- name: Display Final Hardening Summary
  debug:
    msg:
      - "=== FMC SECURITY HARDENING COMPLETED ==="
      - "FMC Host: {{ fmc_host }}"
      - "Hardening Applied: {{ apply_hardening | bool }}"
      - "Compliance Validated: {{ validate_compliance | bool }}"
      - "{% if compliance_summary is defined %}Overall Compliance: {{ compliance_summary.compliance_percentage }}% ({{ compliance_summary.overall_status }}){% endif %}"
      - "{% if compliance_summary is defined %}Checks Passed: {{ compliance_summary.passed_checks }}/{{ compliance_summary.total_checks }}{% endif %}"
      - "{% if compliance_summary is defined and compliance_summary.critical_failures | length > 0 %}Critical Failures: {{ compliance_summary.critical_failures | length }}{% endif %}"
      - ""
      - "Generated Files:"
      - "- Baseline Config: {{ config_output_dir }}/fmc_hardening_baseline_{{ timestamp }}.json"
      - "{% if compliance_report_enabled %}- Compliance Report: {{ config_output_dir }}/fmc_compliance_report_{{ timestamp }}.json{% endif %}"
      # - "{% if generate_html_reports and compliance_report_enabled %}- HTML Report: {{ config_output_dir }}/fmc_compliance_report_{{ timestamp }}.html{% endif %}"
