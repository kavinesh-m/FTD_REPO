---
# Health Monitoring Configuration
# Health monitoring setup per security requirements

- name: Get Server Version Information
  uri:
    url: "{{ fmc_protocol }}://{{ fmc_host }}/api/fmc_platform/v1/info/serverversion"
    method: GET
    headers:
      X-auth-access-token: "{{ auth_token }}"
    validate_certs: "{{ validate_certs }}"
    timeout: "{{ api_timeout }}"
  register: server_version_info
  failed_when: false
  when: health_monitoring_enabled | bool

- name: Debug Server Version Information
  debug:
    var: server_version_info

- name: Get Domain Information
  uri:
    url: "{{ fmc_protocol }}://{{ fmc_host }}/api/fmc_platform/v1/info/domain/{{ domain_uuid }}"
    method: GET
    headers:
      X-auth-access-token: "{{ auth_token }}"
    validate_certs: "{{ validate_certs }}"
    timeout: "{{ api_timeout }}"
  register: domain_info
  failed_when: false
  when: health_monitoring_enabled | bool

  ## BUG: 404
- name: Debug Domain Information
  debug:
    var: domain_info

- name: Get Available Upgrade Packages (Health Indicator)
  uri:
    url: "{{ fmc_protocol }}://{{ fmc_host }}/api/fmc_platform/v1/updates/upgradepackages"
    method: GET
    headers:
      X-auth-access-token: "{{ auth_token }}"
    validate_certs: "{{ validate_certs }}"
    timeout: "{{ api_timeout }}"
  register: upgrade_packages
  failed_when: false
  when: health_monitoring_enabled | bool

  ## BUG: 404
- name: Debug Upgrade Packages Information
  debug:
    var: upgrade_packages

- name: Analyze Health Monitoring Configuration
  set_fact:
    server_version_available: "{{ server_version_info.json is defined }}"
    domain_info_available: "{{ domain_info.json is defined }}"
    upgrade_packages_available: "{{ upgrade_packages.json is defined }}"
  when: health_monitoring_enabled | bool

- name: Check System Health Status
  set_fact:
    system_health_status: "{{ server_version_info.json | default({}) }}"
    critical_services_down: 0
  when: 
    - health_monitoring_enabled | bool
    - server_version_available | default(false)

- name: Determine Health Monitoring Compliance
  set_fact:
    health_monitoring_compliant: "{{ server_version_available | default(false) and domain_info_available | default(false) and upgrade_packages_available | default(false) }}"
  when: health_monitoring_enabled | bool

- name: Log Health Monitoring Status (No Direct Configuration Available)
  debug:
    msg: |
      Health monitoring status logged based on available system information:
      - Server version accessible: {{ server_version_available | default(false) }}
      - Domain information accessible: {{ domain_info_available | default(false) }}
      - Upgrade packages accessible: {{ upgrade_packages_available | default(false) }}
      Note: Direct health monitoring configuration API not available in FMC platform API.
  when: 
    - health_monitoring_enabled | bool
    - apply_hardening | bool

- name: Record Health Monitoring Compliance Status
  set_fact:
    compliance_results: "{{ compliance_results | default({}) | combine({
      'health_monitoring_compliance': {
        'status': health_monitoring_compliant | default(false),
        'server_version_available': server_version_available | default(false),
        'domain_info_available': domain_info_available | default(false),
        'upgrade_packages_available': upgrade_packages_available | default(false),
        'critical_services_down': critical_services_down | default(0),
        'compliant': health_monitoring_compliant | default(false),
        'applied': apply_hardening | default(false),
        'recommendation': 'Monitor system health through available FMC platform APIs and configure manual health monitoring through GUI'
      } }) }}"
  when: health_monitoring_enabled | bool

- name: Display Health Monitoring Compliance Status
  debug:
    msg:
      - "Health Monitoring Compliance Check:"
      - "Server Version Available: {{ server_version_available | default(false) }}"
      - "Domain Information Available: {{ domain_info_available | default(false) }}"
      - "Upgrade Packages Available: {{ upgrade_packages_available | default(false) }}"
      - "Critical Services Down: {{ critical_services_down | default(0) }}"
      - "Overall Compliant: {{ health_monitoring_compliant | default(false) }}"
      - "{% if apply_hardening %}Health Monitoring Status Logged: {{ apply_hardening }}{% endif %}"
  when: health_monitoring_enabled | bool

- name: Display System Information Details
  debug:
    msg:
      - "System Information Status:"
      - "Server Version: {{ server_version_info.json.serverVersion | default('N/A') if server_version_info.json is defined else 'N/A' }}"
      - "Domain UUID: {{ domain_info.json.uuid | default('N/A') if domain_info.json is defined else 'N/A' }}"
      - "Available Upgrade Packages: {{ (upgrade_packages.json.items | length) if (upgrade_packages.json is defined and (upgrade_packages.json.items is defined and upgrade_packages.json.items is iterable)) else 0 }}"
  when: 
    - health_monitoring_enabled | bool
    - (server_version_available | default(false)) or (domain_info_available | default(false)) or (upgrade_packages_available | default(false))

- name: Manual Configuration Instructions for Health Monitoring
  debug:
    msg: |
      MANUAL HEALTH MONITORING CONFIGURATION REQUIRED:
      1. Navigate to System > Health > Health Monitor
      2. Enable Health Monitoring
      3. Configure alert thresholds:
         - CPU Usage: 80%
         - Memory Usage: 80%
         - Disk Usage: 85%
      4. Navigate to System > Logging > Audit
      5. Enable audit logging
      6. Configure log retention policies
      7. Set up SNMP monitoring if required
      8. Click Save to apply changes
  when: 
    - health_monitoring_enabled | bool
    - not (health_monitoring_compliant | default(false))
    - not apply_hardening | bool

- name: Alert on Critical Services Down
  fail:
    msg: |
      CRITICAL HEALTH ALERT:
      {{ critical_services_down }} critical system services are currently down.
      This may indicate system instability or security issues.
      
      Please investigate immediately:
      1. Check System > Health > Health Monitor
      2. Review system logs for errors
      3. Restart affected services if necessary
      4. Contact support if issues persist
  when: 
    - health_monitoring_enabled | bool
    - (critical_services_down | default(0) | int) > 0
    - validate_compliance | bool
  ignore_errors: "{{ not validate_compliance }}"
