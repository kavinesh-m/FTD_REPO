---
# FMC Common Tasks - Foundation role for FMC automation suite

- name: Display FMC Common Role startup
  debug:
    msg:
      - "======================================"
      - "  FMC AUTOMATION SUITE - COMMON SETUP"
      - "======================================"
      - "Initializing common components..."
      - "Target FMC: {{ fmc_host | default('Not defined') }}"
  tags: ['always']

- name: Set execution timestamp
  ansible.builtin.set_fact:
    execution_timestamp: "{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}"
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
  when: execution_timestamp is not defined

- name: Enhanced FMC connection parameter validation
  assert:
    that:
      - fmc_host is defined
      - fmc_host != ""
      # - fmc_host | regex_search('^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$')
      - fmc_username is defined
      - fmc_username != ""
      - fmc_username | length >= 3
      - fmc_password is defined
      - fmc_password != ""
      - fmc_password | length >= 8
      - fmc_port | int >= 1 and fmc_port | int <= 65535
      - fmc_timeout | int >= 10 and fmc_timeout | int <= 300
      - max_retries | int >= 0 and max_retries | int <= 10
    fail_msg: |
      FMC connection parameter validation failed:
      - fmc_host: {{ fmc_host | default('UNDEFINED') }} (must be valid IP or hostname)
      - fmc_username: {{ fmc_username | default('UNDEFINED') }} (minimum 3 characters)
      - fmc_password: {{ 'DEFINED' if fmc_password is defined and fmc_password != '' else 'UNDEFINED' }} (minimum 8 characters)
      - fmc_port: {{ fmc_port }} (must be 1-65535)
      - fmc_timeout: {{ fmc_timeout }} (must be 10-300 seconds)
      - max_retries: {{ max_retries }} (must be 0-10)
    success_msg: "All FMC connection parameters validated successfully"

- name: Validate output directory paths
  assert:
    that:
      - config_output_dir is defined
      - config_output_dir != ""
      - report_output_dir is defined
      - report_output_dir != ""
      - log_output_dir is defined
      - log_output_dir != ""
      - trace_output_dir is defined
      - trace_output_dir != ""
      - temp_dir is defined
      - temp_dir != ""
    fail_msg: |
      Output directory validation failed:
      - config_output_dir: {{ config_output_dir | default('UNDEFINED') }}
      - report_output_dir: {{ report_output_dir | default('UNDEFINED') }}
      - log_output_dir: {{ log_output_dir | default('UNDEFINED') }}
      - trace_output_dir: {{ trace_output_dir | default('UNDEFINED') }}
      - temp_dir: {{ temp_dir | default('UNDEFINED') }}
    success_msg: "All output directory paths validated successfully"

- name: Validate domain and API configuration
  assert:
    that:
      - domain_uuid is defined
      - domain_uuid != ""
      - domain_uuid | regex_search('^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$') or domain_uuid == "Global"
      - fmc_api_version is defined
      - fmc_api_version != ""
      - fmc_api_version | regex_search('^v[0-9]+$')
    fail_msg: |
      Domain and API configuration validation failed:
      - domain_uuid: {{ domain_uuid | default('UNDEFINED') }} (must be valid UUID or 'Global')
      - fmc_api_version: {{ fmc_api_version | default('UNDEFINED') }} (must be in format 'v1', 'v2', etc.)
    success_msg: "Domain and API configuration validated successfully"

- name: Validate feature flags and operational settings
  assert:
    that:
      - debug_mode is defined
      - debug_mode | type_debug == "bool"
      - json_output is defined
      - json_output | type_debug == "bool"
      - generate_reports is defined
      - generate_reports | type_debug == "bool"
      - parallel_execution is defined
      - parallel_execution | type_debug == "bool"
      - max_concurrent_operations | int >= 1 and max_concurrent_operations | int <= 20
    fail_msg: |
      Feature flags and operational settings validation failed:
      - debug_mode: {{ debug_mode | default('UNDEFINED') }} (must be boolean)
      - json_output: {{ json_output | default('UNDEFINED') }} (must be boolean)
      - generate_reports: {{ generate_reports | default('UNDEFINED') }} (must be boolean)
      - parallel_execution: {{ parallel_execution | default('UNDEFINED') }} (must be boolean)
      - max_concurrent_operations: {{ max_concurrent_operations }} (must be 1-20)
    success_msg: "Feature flags and operational settings validated successfully"

- name: Create all required output directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ config_output_dir }}"
    - "{{ trace_output_dir }}"
    - "{{ report_output_dir }}"
    - "{{ log_output_dir }}"
    - "{{ temp_dir }}"
  delegate_to: localhost
  run_once: true

- name: Initialize status tracking variables
  set_fact:
    fmc_connection_verified: false
    ftd_devices_found: false
    ftd_discovery_successful: false
    hardening_config_extracted: false
    suite_start_time: "{{ now().strftime('%s') }}"

- name: Display configuration summary
  debug:
    msg:
      - "Configuration Summary:"
      - "  FMC Host: {{ fmc_host }}"
      - "  FMC Port: {{ fmc_port }}"
      - "  Username: {{ fmc_username }}"
      - "  Timeout: {{ fmc_timeout }}s"
      - "  Validate Certs: {{ fmc_validate_certs }}"
      - "  Domain UUID: {{ domain_uuid }}"
      - "  Report Directory: {{ report_output_dir }}"
      - "  Log Directory: {{ log_output_dir }}"
  when: debug_mode | default(false) | bool

- name: Common setup completed
  debug:
    msg: "FMC Common role initialization completed successfully"
  tags: ['always']
