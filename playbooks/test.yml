---
- hosts: all
  connection: httpapi
  gather_facts: false
  tasks:
    - name: Get Domain UUID
      cisco.fmcansible.fmc_configuration:
        operation: getAllDomain
        register_as: domain

    - name: Get Access Policy
      cisco.fmcansible.fmc_configuration:
        operation: getAllAccessPolicy
        path_params:
          domainUUID: '{{ domain[0].uuid }}'
        register_as: accesspolicy

    - name: Debug Access Policy
      debug:
        var: accesspolicy

    - name: Create Access Policy if not exists
      cisco.fmcansible.fmc_configuration:
        operation: upsertAccessPolicy
        data:
          name: "ACP Policy"
          type: "AccessPolicy"
          defaultAction:
            action: "BLOCK"
            type: "AccessPolicyDefaultAction"
        path_params:
          domainUUID: '{{ domain[0].uuid }}'
        register_as: created_accesspolicy
      when: accesspolicy | length == 0

    - name: Set access policy variable
      set_fact:
        target_accesspolicy: "{{ accesspolicy[0] if accesspolicy | length > 0 else created_accesspolicy }}"

    - name: Create source network object
      cisco.fmcansible.fmc_configuration:
        operation: upsertNetworkObject
        data:
          name: "source-network"
          value: "192.168.1.0/24"
          type: "networkobject"
        path_params:
          domainUUID: '{{ domain[0].uuid }}'
        register_as: source_net

    - name: Create access rule
      cisco.fmcansible.fmc_configuration:
        operation: upsertAccessRule
        data:
          name: "Allow-Internal-Traffic"
          type: "accessrule"
          sourceNetworks:
            objects:
              - id: '{{ source_net.id }}'
                name: '{{ source_net.name }}'
                type: '{{ source_net.type }}'
          action: "ALLOW"
          enabled: true
        path_params:
          containerUUID: '{{ target_accesspolicy.id }}'
          domainUUID: '{{ domain[0].uuid }}'

    # Delete Access Rule first (since it references the network object)
    - name: Get Access Rule to delete
      cisco.fmcansible.fmc_configuration:
        operation: getAllAccessRule
        path_params:
          containerUUID: '{{ accesspolicy[0].id }}'
          domainUUID: '{{ domain[0].uuid }}'
        filters:
          name: "Allow-Internal-Traffic"
        register_as: access_rule

    - name: Delete Access Rule
      cisco.fmcansible.fmc_configuration:
        operation: deleteAccessRule
        path_params:
          containerUUID: '{{ accesspolicy[0].id }}'
          domainUUID: '{{ domain[0].uuid }}'
          objectId: '{{ access_rule[0].id }}'
      when: access_rule | length > 0

    # Delete Network Object
    - name: Get Network Object to delete
      cisco.fmcansible.fmc_configuration:
        operation: getAllNetworkObject
        path_params:
          domainUUID: '{{ domain[0].uuid }}'
        filters:
          name: "source-network"
        register_as: network_object

    - name: Delete Network Object
      cisco.fmcansible.fmc_configuration:
        operation: deleteNetworkObject
        path_params:
          domainUUID: '{{ domain[0].uuid }}'
          objectId: '{{ network_object[0].id }}'
      when: network_object | length > 0
